version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3


  webhost:
     build:
       context: ./webhost
       dockerfile: Dockerfile
     container_name: webhost_api
     environment:
       DATABASE_URL: ${DATABASE_URL}
       RABBITMQ_HOST: ${RABBITMQ_HOST}
       SECRET_TOKEN: ${SECRET_TOKEN}
       LOG_FILE: webhost.log
     volumes:
       - ./data/app.db:/app/app.db
       - ./data/webhost.log:/app/webhost.log
     ports:
       - "5000:5000"
     depends_on:
       rabbitmq:
         condition: service_healthy

  deep_learning:
     build:
       context: ./webhost
       dockerfile: Dockerfile
     container_name: deep_learning_server
     restart: always
     environment:
       DATABASE_URL: ${DATABASE_URL}
       RABBITMQ_HOST: ${RABBITMQ_HOST}
       SECRET_TOKEN: ${SECRET_TOKEN}
       WEB_HOST_URL: ${WEB_HOST_URL}
       LOG_FILE: deep_learning_server.log
     volumes:
       - ./data/deep_learning_server.log:/app/deep_learning_server.log
     command: python deep_learning_server.py
     depends_on:
       rabbitmq:
           condition: service_healthy
